import { ethers, network } from "hardhat";
import { Signer, Wallet, BigNumber } from "ethers";
import { SNXFlashLoanTool, IAddressResolver, ERC20, IDelegateApprovals } from "../types";
import { migrate as migrateSNXFlashLoanTool } from "./SNXFlashLoanTool";
import { addressResolverAddress, impersonateAddress } from "../constants";

async function main() {
  const accounts: Signer[] = await ethers.getSigners();
  const owner: Wallet = <Wallet>accounts[0];
  const snxFlashLoanTool: SNXFlashLoanTool = await migrateSNXFlashLoanTool(owner);

  const impersonateAddressSigner: Signer = await ethers.provider.getSigner(impersonateAddress);
  const impersonateAddressWallet: Wallet = <Wallet>impersonateAddressSigner;
  await network.provider.request({
    method: "hardhat_impersonateAccount",
    params: [impersonateAddress],
  });

  const synthetixResolver: IAddressResolver = (await ethers.getContractAt(
    "synthetix/contracts/interfaces/IAddressResolver.sol:IAddressResolver",
    addressResolverAddress,
  )) as IAddressResolver;
  const snxAddress: string = await synthetixResolver.getAddress(ethers.utils.formatBytes32String("ProxyERC20"));
  const SNX: ERC20 = (await ethers.getContractAt(
    "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
    snxAddress,
  )) as ERC20;
  const delegateApprovalsAddress: string = await synthetixResolver.getAddress(
    ethers.utils.formatBytes32String("DelegateApprovals"),
  );
  const delegateApprovals: IDelegateApprovals = (await ethers.getContractAt(
    "synthetix/contracts/interfaces/IDelegateApprovals.sol:IDelegateApprovals",
    delegateApprovalsAddress,
  )) as IDelegateApprovals;

  const snxAmount = BigNumber.from("1410547409233276473878735");
  // const sUSDAmount = BigNumber.from("245799795116289250050873");

  await SNX.connect(impersonateAddressWallet).approve(snxFlashLoanTool.address, snxAmount);
  await delegateApprovals.connect(impersonateAddressWallet).approveBurnOnBehalf(snxFlashLoanTool.address);
  await snxFlashLoanTool
    .connect(impersonateAddressWallet)
    .burn(
      ethers.constants.AddressZero,
      snxAmount,
      "0xdef1c0ded9bec7f1a1670819833240f027b25eff",
      "0x415565b0000000000000000000000000c011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f00000000000000000000000057ab1ec28d129707052df4df418d58a2d46d5f5100000000000000000000000000000000000000000000340cd5665b22e81c4339000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ac011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000340cd5665b22e81c43390000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000d42616e636f720000000000000000000000000000000000000000000000000000000000000000340cd5665b22e81c43390000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000001000000000000000000000000002f9ec37d6ccfff1cab21733bdadede11c823ccb000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000005000000000000000000000000c011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f000000000000000000000000adaa88ca9913f2d6f8caa0616ff01ee8d4223fde0000000000000000000000001f573d6fb3f13d689ff844b4ce37794d79a7ff1c000000000000000000000000874d8de5b26c9d9f6aa8d7bab283f9a9c6f777f4000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002e000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4800000000000000000000000057ab1ec28d129707052df4df418d58a2d46d5f51000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000002a000000000000000000000000000000000000000000000000000000000000002a00000000000000000000000000000000000000000000000000000000000000280ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000143757276650000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000080000000000000000000000000a5407eae9ba41422680e2e00537571bcc53efbfda6417ede00000000000000000000000000000000000000000000000000000000000000004000000000000000000000000c011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f00000000000000000000000057ab1ec28d129707052df4df418d58a2d46d5f51000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000000000000000000000000000000000000000000000869584cd000000000000000000000000100000000000000000000000000000000000001100000000000000000000000000000000000000000000009ea9bd5ded60f8dead",
      { gasLimit: 1000000 },
    );

  await network.provider.request({
    method: "hardhat_stopImpersonatingAccount",
    params: [impersonateAddress],
  });
}

main()
  .then(() => process.exit(0))
  .catch(error => {
    console.error(error);
    process.exit(1);
  });
